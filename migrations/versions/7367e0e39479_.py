"""empty message

Revision ID: 7367e0e39479
Revises: 
Create Date: 2018-08-16 11:48:05.938820

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7367e0e39479'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('en_text', sa.String(length=2000), nullable=True),
    sa.Column('hi_text', sa.String(length=2000), nullable=True),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='questiondifficulty'), nullable=False),
    sa.Column('topic', sa.Enum('topic1', 'topic2', 'topic3', 'topic4', name='questiontopic'), nullable=False),
    sa.Column('type', sa.Enum('mcq', 'integer_answer', name='questiontype'), nullable=False),
    sa.Column('answer', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrolment_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=6), nullable=True),
    sa.Column('test_start_time', sa.DateTime(), nullable=True),
    sa.Column('test_end_time', sa.DateTime(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('question_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('en_text', sa.String(length=2000), nullable=True),
    sa.Column('hi_text', sa.String(length=2000), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stage_transitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_stage', sa.String(length=100), nullable=False),
    sa.Column('to_stage', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact', sa.String(length=10), nullable=True),
    sa.Column('main_contact', sa.Boolean(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enrolment_key_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('answer', sa.String(length=10), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['enrolment_key_id'], ['enrolment_keys.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incoming_calls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact', sa.Integer(), nullable=True),
    sa.Column('call_type', sa.Enum('rqc', 'interested', 'ekg', name='incomingcalltype'), nullable=False),
    sa.ForeignKeyConstraint(['contact'], ['student_contacts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outgoing_calls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contact'], ['student_contacts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outgoing_sms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('test_fail', 'test_pass', 'enrolment_key_gen', 'alg_interview_pass', 'alg_interview_fail', 'other', name='outgoingsmstype'), nullable=False),
    sa.Column('text', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['contact'], ['student_contacts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('outgoing_sms')
    op.drop_table('outgoing_calls')
    op.drop_table('incoming_calls')
    op.drop_table('attempts')
    op.drop_table('student_contacts')
    op.drop_table('stage_transitions')
    op.drop_table('question_options')
    op.drop_table('enrolment_keys')
    op.drop_table('students')
    op.drop_table('questions')
    # ### end Alembic commands ###
