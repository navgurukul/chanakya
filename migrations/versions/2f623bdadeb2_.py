"""empty message

Revision ID: 2f623bdadeb2
Revises: 
Create Date: 2018-02-23 07:37:47.764857

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2f623bdadeb2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enrolment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enrolment_key', sa.String(length=5), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enrolment_enrolment_key'), 'enrolment', ['enrolment_key'], unique=True)
    op.create_index(op.f('ix_enrolment_phone_number'), 'enrolment', ['phone_number'], unique=False)
    op.create_table('options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('option_1', sa.String(length=128), nullable=True),
    sa.Column('option_2', sa.String(length=128), nullable=True),
    sa.Column('option_3', sa.String(length=128), nullable=True),
    sa.Column('option_4', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('en_question_text', sa.String(length=1024), nullable=False),
    sa.Column('hi_question_text', sa.String(length=1024), nullable=False),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='difficulty'), nullable=False),
    sa.Column('category', sa.String(length=32), nullable=False),
    sa.Column('question_type', sa.Enum('MCQ', 'short_answer', 'view', name='questiontype'), nullable=False),
    sa.Column('options_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['options_id'], ['options.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('started_on', sa.DateTime(), nullable=False),
    sa.Column('submitted_on', sa.DateTime(), nullable=False),
    sa.Column('received_marks', sa.Integer(), nullable=False),
    sa.Column('max_possible_marks', sa.Integer(), nullable=False),
    sa.Column('set_name', sa.String(length=32), nullable=False),
    sa.Column('enrolment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enrolment_id'], ['enrolment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('potential_name', sa.String(length=64), nullable=False),
    sa.Column('student_mobile', sa.String(length=10), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', 'others', name='gender'), nullable=False),
    sa.Column('city', sa.String(length=64), nullable=False),
    sa.Column('state', sa.String(length=64), nullable=False),
    sa.Column('caste_tribe', sa.Enum('SC', 'ST', 'OBC', 'General', name='caste'), nullable=False),
    sa.Column('owns_android', sa.Enum('yes', 'no', name='boolean'), nullable=False),
    sa.Column('owns_computer', sa.Enum('yes', 'no', name='boolean'), nullable=False),
    sa.Column('is_works', sa.Enum('yes', 'no', name='boolean'), nullable=False),
    sa.Column('works_where', sa.String(length=64), nullable=False),
    sa.Column('num_fam_members', sa.Integer(), nullable=False),
    sa.Column('num_earning_fam_members', sa.Integer(), nullable=False),
    sa.Column('father_prof', sa.String(length=64), nullable=False),
    sa.Column('mother_prof', sa.String(length=64), nullable=False),
    sa.Column('monthly_fam_income', sa.Integer(), nullable=False),
    sa.Column('last_class_passed', sa.Integer(), nullable=False),
    sa.Column('is_10_pass', sa.Enum('yes', 'no', name='boolean'), nullable=False),
    sa.Column('percentage_10', sa.Integer(), nullable=False),
    sa.Column('is_12_pass', sa.Enum('yes', 'no', name='boolean'), nullable=False),
    sa.Column('percentage_12', sa.Integer(), nullable=False),
    sa.Column('stream_11_12', sa.Enum('medical', 'non_medical', 'commerce_maths', 'commerce_no_maths', name='stream_11_12'), nullable=False),
    sa.Column('is_college_enrolled', sa.Enum('yes', 'no', name='boolean'), nullable=False),
    sa.Column('college_which', sa.String(length=256), nullable=False),
    sa.Column('college_type', sa.Enum('Normal', 'Distant', name='collegetype'), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('enrolment_id', sa.Integer(), nullable=True),
    sa.Column('test_data_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enrolment_id'], ['enrolment.id'], ),
    sa.ForeignKeyConstraint(['test_data_id'], ['test_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student')
    op.drop_table('test_data')
    op.drop_table('question')
    op.drop_table('options')
    op.drop_index(op.f('ix_enrolment_phone_number'), table_name='enrolment')
    op.drop_index(op.f('ix_enrolment_enrolment_key'), table_name='enrolment')
    op.drop_table('enrolment')
    # ### end Alembic commands ###
